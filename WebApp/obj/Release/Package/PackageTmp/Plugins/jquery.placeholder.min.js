/*
jquery.placeholder v1.0
可以在输入域中添加提示消息
$('input[placeholder]').placeholder({
  hideOnFocus: false //输入有效字符时才清空
}) */
!function (a) { var b = "placeholder", c = b in document.createElement("input"); a.fn.placeholder = function (d) { return this.each(function () { var f, g, i, j, k, l, m, n, o, p, q, r, e = a(this); return "string" == typeof d && (d = { text: d }), f = a.extend({ text: "", style: {}, namespace: "placeholder", hideOnFocus: !0 }, d || {}), f.text || (f.text = e.attr(b)), c ? (e.attr(b, f.text), void 0) : (g = e.width(), e.height(), i = ["marginTop", "marginLeft", "paddingTop", "paddingLeft", "paddingRight"], j = function () { r.show() }, k = function () { r.hide() }, l = function () { return !e.val() }, m = function () { l() ? j() : k() }, n = function () { var b = e.position(); f.hideOnFocus || (b.left += 2), r.css(b), a.each(i, function (a, b) { r.css(b, e.css(b)) }) }, o = { color: "#808080", cursor: "text", textAlign: "left", position: "absolute", textShadow: "none", fontSize: "12px", fontFamily: e.css("fontFamily"), display: l() ? "block" : "none", fontWeight: "normal" }, p = { text: f.text, width: g, height: "auto" }, q = "." + f.namespace, r = e.data("layer" + q), r || (r = a("<label>", p).attr("for", e.attr("id")).appendTo(e.offsetParent()), e.data("layer" + q, r)), r.css(a.extend(o, f.style)).unbind("click" + q).bind("click" + q, function () { f.hideOnFocus && k(), e.focus() }), e.unbind(q).bind("blur" + q, m), f.hideOnFocus ? e.bind("focus" + q, k) : e.bind("keypress keydown" + q, function (a) { var b = a.keyCode; (a.charCode || b >= 65 && 90 >= b) && k() }).bind("keyup" + q, m), e.get(0).onpropertychange = m, n(), m(), void 0) }) } }(jQuery);